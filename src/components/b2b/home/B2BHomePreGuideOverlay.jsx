import { useEffect, useState } from "react";
import styles from "./B2BHomePreGuideOverlay.module.scss";
import { CiCircleCheck } from "react-icons/ci";

export const B2BHomePreGuideOverlay = ({ onClick, visible, setVisible }) => {
  const [isCheck, setIsCheck] = useState(false);

  const handleClose = () => {
    if (isCheck) {
      localStorage.setItem("pre-guide-close", true);
    }
    setVisible(false);
  };

  // 스플래시 화면이 열릴 때 스크롤 제어
  useEffect(() => {
    if (visible) {
      window.scrollTo(0, 0);
      document.body.style.overflow = "hidden";
    } else {
      document.body.style.overflow = "auto";
    }
    return () => {
      document.body.style.overflow = "auto";
    };
  }, [visible]);

  return (
    <div className={styles.container}>
      <div className={styles.topGuide}>
        <svg
          className={styles.topArrow}
          width="31"
          height="44"
          viewBox="0 0 31 44"
          fill="none"
          xmlns="http://www.w3.org/2000/svg">
          <path
            d="M8.77079 22.8951L7.91815 22.3726L8.77079 22.8951ZM29.5101 1.51153C30.0549 1.60224 30.423 2.11742 30.3323 2.6622L28.8541 11.54C28.7633 12.0848 28.2482 12.4529 27.7034 12.3621C27.1586 12.2714 26.7905 11.7563 26.8812 11.2115L28.1952 3.32012L20.3039 2.00614C19.7591 1.91543 19.391 1.40026 19.4817 0.855473C19.5724 0.310689 20.0876 -0.0574095 20.6323 0.033303L29.5101 1.51153ZM1.96759 43.6162C0.971037 43.6992 0.970994 43.6987 0.970948 43.6982C0.970929 43.6979 0.970882 43.6974 0.970845 43.6969C0.970771 43.696 0.970687 43.695 0.970594 43.6938C0.970409 43.6914 0.970187 43.6886 0.969933 43.6852C0.969425 43.6785 0.968789 43.6697 0.968057 43.6588C0.966595 43.6371 0.964754 43.6073 0.962811 43.5693C0.958923 43.4935 0.954624 43.3855 0.952111 43.2465C0.947085 42.9685 0.949202 42.5665 0.976056 42.0497C1.02977 41.016 1.18242 39.5233 1.57464 37.6459C2.35949 33.8889 4.10164 28.6004 7.91815 22.3726L8.77079 22.8951L9.62342 23.4176C5.93147 29.4422 4.27202 34.5143 3.53238 38.0548C3.16236 39.8261 3.02205 41.2164 2.97336 42.1535C2.94901 42.622 2.94757 42.9773 2.95178 43.2103C2.95389 43.3268 2.95741 43.4128 2.96019 43.467C2.96158 43.4941 2.96278 43.5132 2.96353 43.5243C2.9639 43.5299 2.96416 43.5334 2.96428 43.5349C2.96433 43.5356 2.96435 43.5359 2.96433 43.5356C2.96432 43.5355 2.9643 43.5352 2.96427 43.5348C2.96425 43.5346 2.96422 43.5342 2.96421 43.5341C2.96417 43.5337 2.96414 43.5333 1.96759 43.6162ZM8.77079 22.8951L7.91815 22.3726C11.1042 17.1735 16.3418 11.9936 20.7273 8.14516C22.9294 6.21271 24.9352 4.60009 26.3911 3.47014C27.1192 2.90497 27.7104 2.46005 28.1206 2.15572C28.3257 2.00354 28.4856 1.88648 28.5947 1.80707C28.6493 1.76737 28.6912 1.73707 28.7197 1.71651C28.734 1.70622 28.7449 1.69837 28.7524 1.69299C28.7561 1.6903 28.759 1.68823 28.7611 1.68678C28.7621 1.68606 28.7629 1.68549 28.7634 1.68508C28.7637 1.68487 28.764 1.68468 28.7641 1.68457C28.7644 1.68442 28.7645 1.68431 29.3459 2.49795C29.9272 3.3116 29.9273 3.31156 29.9273 3.31157C29.9272 3.31162 29.9271 3.31166 29.927 3.31177C29.9267 3.31198 29.9262 3.31235 29.9255 3.31287C29.924 3.31392 29.9217 3.31559 29.9185 3.31787C29.9121 3.32243 29.9023 3.32946 29.8892 3.33891C29.863 3.3578 29.8235 3.38638 29.7713 3.42433C29.667 3.50023 29.5122 3.61359 29.3123 3.76187C28.9126 4.05846 28.333 4.49462 27.6174 5.05008C26.1856 6.16137 24.2119 7.74817 22.0464 9.64843C17.6967 13.4655 12.6467 18.4841 9.62342 23.4176L8.77079 22.8951Z"
            fill="white"
          />
        </svg>

        <span className={styles.guideText}>
          손님들이 많이 찾아올 수 있도록 <br />
          <span className={styles.pointText}>가게 이벤트</span>를 올려주세요!
        </span>
      </div>
      <div className={styles.bottomGuide}>
        <span className={styles.guideText}>
          내 <span className={styles.pointText}>가게만의 캐릭터</span>를 만들 수 있어요!
        </span>
        <svg
          className={styles.bottomArrow}
          width="31"
          height="44"
          viewBox="0 0 31 44"
          fill="none"
          xmlns="http://www.w3.org/2000/svg">
          <path
            d="M8.77079 22.8951L7.91815 22.3726L8.77079 22.8951ZM29.5101 1.51153C30.0549 1.60224 30.423 2.11742 30.3323 2.6622L28.8541 11.54C28.7633 12.0848 28.2482 12.4529 27.7034 12.3621C27.1586 12.2714 26.7905 11.7563 26.8812 11.2115L28.1952 3.32012L20.3039 2.00614C19.7591 1.91543 19.391 1.40026 19.4817 0.855473C19.5724 0.310689 20.0876 -0.0574095 20.6323 0.033303L29.5101 1.51153ZM1.96759 43.6162C0.971037 43.6992 0.970994 43.6987 0.970948 43.6982C0.970929 43.6979 0.970882 43.6974 0.970845 43.6969C0.970771 43.696 0.970687 43.695 0.970594 43.6938C0.970409 43.6914 0.970187 43.6886 0.969933 43.6852C0.969425 43.6785 0.968789 43.6697 0.968057 43.6588C0.966595 43.6371 0.964754 43.6073 0.962811 43.5693C0.958923 43.4935 0.954624 43.3855 0.952111 43.2465C0.947085 42.9685 0.949202 42.5665 0.976056 42.0497C1.02977 41.016 1.18242 39.5233 1.57464 37.6459C2.35949 33.8889 4.10164 28.6004 7.91815 22.3726L8.77079 22.8951L9.62342 23.4176C5.93147 29.4422 4.27202 34.5143 3.53238 38.0548C3.16236 39.8261 3.02205 41.2164 2.97336 42.1535C2.94901 42.622 2.94757 42.9773 2.95178 43.2103C2.95389 43.3268 2.95741 43.4128 2.96019 43.467C2.96158 43.4941 2.96278 43.5132 2.96353 43.5243C2.9639 43.5299 2.96416 43.5334 2.96428 43.5349C2.96433 43.5356 2.96435 43.5359 2.96433 43.5356C2.96432 43.5355 2.9643 43.5352 2.96427 43.5348C2.96425 43.5346 2.96422 43.5342 2.96421 43.5341C2.96417 43.5337 2.96414 43.5333 1.96759 43.6162ZM8.77079 22.8951L7.91815 22.3726C11.1042 17.1735 16.3418 11.9936 20.7273 8.14516C22.9294 6.21271 24.9352 4.60009 26.3911 3.47014C27.1192 2.90497 27.7104 2.46005 28.1206 2.15572C28.3257 2.00354 28.4856 1.88648 28.5947 1.80707C28.6493 1.76737 28.6912 1.73707 28.7197 1.71651C28.734 1.70622 28.7449 1.69837 28.7524 1.69299C28.7561 1.6903 28.759 1.68823 28.7611 1.68678C28.7621 1.68606 28.7629 1.68549 28.7634 1.68508C28.7637 1.68487 28.764 1.68468 28.7641 1.68457C28.7644 1.68442 28.7645 1.68431 29.3459 2.49795C29.9272 3.3116 29.9273 3.31156 29.9273 3.31157C29.9272 3.31162 29.9271 3.31166 29.927 3.31177C29.9267 3.31198 29.9262 3.31235 29.9255 3.31287C29.924 3.31392 29.9217 3.31559 29.9185 3.31787C29.9121 3.32243 29.9023 3.32946 29.8892 3.33891C29.863 3.3578 29.8235 3.38638 29.7713 3.42433C29.667 3.50023 29.5122 3.61359 29.3123 3.76187C28.9126 4.05846 28.333 4.49462 27.6174 5.05008C26.1856 6.16137 24.2119 7.74817 22.0464 9.64843C17.6967 13.4655 12.6467 18.4841 9.62342 23.4176L8.77079 22.8951Z"
            fill="white"
          />
        </svg>
      </div>
      <div className={styles.buttonWrapper}>
        <div className={styles.leftButton} onClick={() => setIsCheck(!isCheck)}>
          <CiCircleCheck className={`${styles.icon} ${isCheck && styles.check}`} />
          다시보지 않기
        </div>
        <div className={styles.rightButton} onClick={handleClose}>
          닫기
        </div>
      </div>
    </div>
  );
};
